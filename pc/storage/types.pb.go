// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage/types.proto

package storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GlobalData struct {
	UserStateMap         map[string]*State `protobuf:"bytes,1,rep,name=userStateMap,proto3" json:"userStateMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CurrentUser          string            `protobuf:"bytes,2,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GlobalData) Reset()         { *m = GlobalData{} }
func (m *GlobalData) String() string { return proto.CompactTextString(m) }
func (*GlobalData) ProtoMessage()    {}
func (*GlobalData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ad31e6b1ce7e, []int{0}
}

func (m *GlobalData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalData.Unmarshal(m, b)
}
func (m *GlobalData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalData.Marshal(b, m, deterministic)
}
func (m *GlobalData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalData.Merge(m, src)
}
func (m *GlobalData) XXX_Size() int {
	return xxx_messageInfo_GlobalData.Size(m)
}
func (m *GlobalData) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalData.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalData proto.InternalMessageInfo

func (m *GlobalData) GetUserStateMap() map[string]*State {
	if m != nil {
		return m.UserStateMap
	}
	return nil
}

func (m *GlobalData) GetCurrentUser() string {
	if m != nil {
		return m.CurrentUser
	}
	return ""
}

type State struct {
	Token                string            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Settings             *StateSetting     `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	PanCookie            []*Cookies        `protobuf:"bytes,3,rep,name=panCookie,proto3" json:"panCookie,omitempty"`
	UserStorage          map[string]string `protobuf:"bytes,4,rep,name=userStorage,proto3" json:"userStorage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Username             string            `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ad31e6b1ce7e, []int{1}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *State) GetSettings() *StateSetting {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *State) GetPanCookie() []*Cookies {
	if m != nil {
		return m.PanCookie
	}
	return nil
}

func (m *State) GetUserStorage() map[string]string {
	if m != nil {
		return m.UserStorage
	}
	return nil
}

func (m *State) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type StateSetting struct {
	DownloadSegSize      int64    `protobuf:"varint,1,opt,name=downloadSegSize,proto3" json:"downloadSegSize,omitempty"`
	DownloadCoroutine    int64    `protobuf:"varint,2,opt,name=downloadCoroutine,proto3" json:"downloadCoroutine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateSetting) Reset()         { *m = StateSetting{} }
func (m *StateSetting) String() string { return proto.CompactTextString(m) }
func (*StateSetting) ProtoMessage()    {}
func (*StateSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ad31e6b1ce7e, []int{1, 0}
}

func (m *StateSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateSetting.Unmarshal(m, b)
}
func (m *StateSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateSetting.Marshal(b, m, deterministic)
}
func (m *StateSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateSetting.Merge(m, src)
}
func (m *StateSetting) XXX_Size() int {
	return xxx_messageInfo_StateSetting.Size(m)
}
func (m *StateSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_StateSetting.DiscardUnknown(m)
}

var xxx_messageInfo_StateSetting proto.InternalMessageInfo

func (m *StateSetting) GetDownloadSegSize() int64 {
	if m != nil {
		return m.DownloadSegSize
	}
	return 0
}

func (m *StateSetting) GetDownloadCoroutine() int64 {
	if m != nil {
		return m.DownloadCoroutine
	}
	return 0
}

type Cookies struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Expires              int64    `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookies) Reset()         { *m = Cookies{} }
func (m *Cookies) String() string { return proto.CompactTextString(m) }
func (*Cookies) ProtoMessage()    {}
func (*Cookies) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ad31e6b1ce7e, []int{2}
}

func (m *Cookies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookies.Unmarshal(m, b)
}
func (m *Cookies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookies.Marshal(b, m, deterministic)
}
func (m *Cookies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookies.Merge(m, src)
}
func (m *Cookies) XXX_Size() int {
	return xxx_messageInfo_Cookies.Size(m)
}
func (m *Cookies) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookies.DiscardUnknown(m)
}

var xxx_messageInfo_Cookies proto.InternalMessageInfo

func (m *Cookies) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Cookies) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Cookies) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Cookies) GetExpires() int64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func init() {
	proto.RegisterType((*GlobalData)(nil), "storage.globalData")
	proto.RegisterMapType((map[string]*State)(nil), "storage.globalData.UserStateMapEntry")
	proto.RegisterType((*State)(nil), "storage.state")
	proto.RegisterMapType((map[string]string)(nil), "storage.state.UserStorageEntry")
	proto.RegisterType((*StateSetting)(nil), "storage.state.setting")
	proto.RegisterType((*Cookies)(nil), "storage.cookies")
}

func init() { proto.RegisterFile("storage/types.proto", fileDescriptor_7311ad31e6b1ce7e) }

var fileDescriptor_7311ad31e6b1ce7e = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x6e, 0xda, 0x40,
	0x14, 0x94, 0x31, 0xc6, 0xf0, 0x5c, 0xb5, 0xb0, 0x45, 0x68, 0xe5, 0x4b, 0x11, 0x6a, 0x25, 0x0e,
	0x95, 0x2b, 0xd1, 0x4b, 0xd5, 0x43, 0xa4, 0x88, 0xe4, 0x90, 0x43, 0x14, 0xc9, 0x88, 0x0f, 0x58,
	0xe0, 0xc9, 0xb2, 0x30, 0xbb, 0xd6, 0xee, 0x3a, 0x09, 0xb9, 0xe6, 0xef, 0xf2, 0x55, 0x91, 0xd7,
	0x8b, 0x31, 0x90, 0x43, 0x6e, 0x7e, 0xf3, 0x66, 0xc6, 0xe3, 0x79, 0x86, 0xef, 0x4a, 0x0b, 0xc9,
	0x12, 0xfc, 0xa3, 0xf7, 0x39, 0xaa, 0x28, 0x97, 0x42, 0x0b, 0xe2, 0x5b, 0x70, 0xf2, 0xe6, 0x00,
	0x24, 0x99, 0x58, 0xb1, 0xec, 0x86, 0x69, 0x46, 0xee, 0xe0, 0x4b, 0xa1, 0x50, 0x2e, 0x34, 0xd3,
	0x78, 0xcf, 0x72, 0xea, 0x8c, 0xdd, 0x69, 0x30, 0xfb, 0x15, 0x59, 0x7a, 0x74, 0xa4, 0x46, 0xcb,
	0x06, 0xef, 0x96, 0x6b, 0xb9, 0x8f, 0x4f, 0xa4, 0x64, 0x0c, 0xc1, 0xba, 0x90, 0x12, 0xb9, 0x2e,
	0x99, 0xb4, 0x35, 0x76, 0xa6, 0xbd, 0xb8, 0x09, 0x85, 0x0f, 0x30, 0xb8, 0x30, 0x21, 0x7d, 0x70,
	0xb7, 0xb8, 0xa7, 0x8e, 0xa1, 0x97, 0x8f, 0xe4, 0x27, 0x78, 0x8f, 0x2c, 0x2b, 0xd0, 0x58, 0x04,
	0xb3, 0xaf, 0x75, 0x18, 0x55, 0x0a, 0xe3, 0x6a, 0xf9, 0xbf, 0xf5, 0xcf, 0x99, 0xbc, 0xba, 0xe0,
	0x19, 0x90, 0x0c, 0xc1, 0xd3, 0x62, 0x8b, 0xdc, 0xfa, 0x54, 0x03, 0x99, 0x41, 0x57, 0xa1, 0xd6,
	0x29, 0x4f, 0x94, 0x35, 0x1b, 0x9d, 0x9a, 0x45, 0x76, 0x1d, 0xd7, 0x3c, 0x12, 0x41, 0x2f, 0x67,
	0x7c, 0x2e, 0xc4, 0x36, 0x45, 0xea, 0x9a, 0x3a, 0xfa, 0xb5, 0x68, 0x6d, 0x60, 0x15, 0x1f, 0x29,
	0xe4, 0x1a, 0x82, 0xaa, 0x06, 0xc3, 0xa0, 0x6d, 0xa3, 0xf8, 0x71, 0xf6, 0x9a, 0xe5, 0x91, 0x51,
	0x55, 0xd7, 0xd4, 0x90, 0x10, 0xba, 0xe5, 0xc8, 0xd9, 0x0e, 0xa9, 0x67, 0xf2, 0xd7, 0x73, 0xc8,
	0xc0, 0xb7, 0xd1, 0xc8, 0x14, 0xbe, 0x6d, 0xc4, 0x13, 0xcf, 0x04, 0xdb, 0x2c, 0x30, 0x59, 0xa4,
	0x2f, 0x68, 0xbe, 0xd6, 0x8d, 0xcf, 0x61, 0xf2, 0x1b, 0x06, 0x07, 0x68, 0x2e, 0xa4, 0x28, 0x74,
	0xca, 0xab, 0x36, 0xdd, 0xf8, 0x72, 0x11, 0x5e, 0x41, 0xff, 0x3c, 0xdf, 0x07, 0x57, 0x19, 0x36,
	0xaf, 0xd2, 0x6b, 0x5e, 0x61, 0x0d, 0xbe, 0xed, 0xe5, 0xb3, 0x32, 0x32, 0x82, 0xce, 0x46, 0xec,
	0x58, 0xca, 0xa9, 0x6b, 0x60, 0x3b, 0x11, 0x0a, 0x3e, 0x3e, 0xe7, 0xa9, 0x44, 0x45, 0xdb, 0x26,
	0xee, 0x61, 0x5c, 0x75, 0xcc, 0x7f, 0xfc, 0xf7, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x32, 0x32, 0xfe,
	0xfd, 0xde, 0x02, 0x00, 0x00,
}
